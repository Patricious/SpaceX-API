{"ast":null,"code":"var _jsxFileName = \"/Users/patricia/Downloads/the-ultimate-api-challenge-spacex-master/starter-files/src/components/NavBar/NavBar.js\";\nimport React, { useRef } from 'react';\nimport { gql, useQuery } from '@apollo/client';\n// components\nimport Error from './../Error';\nimport Loader from './../Loader';\nimport TopMenu from './../TopMenu';\nimport SideMenu from './../SideMenu';\n// hooks\nimport useNavigation from './../../hooks/useNavigation';\n// style\nimport './style.scss';\nconst GET_ROCKETS_NAMES = gql`\n    {\n        rockets(offset: 1) {\n            id\n            name\n        }\n    }\n`;\nconst NavBar = () => {\n  const navRef = useRef(null);\n  const {\n    isMobileView,\n    isMenuOpen,\n    setIsMenuOpen\n  } = useNavigation(navRef);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_ROCKETS_NAMES);\n  if (loading) return /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(Error, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    ref: navRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopMenu, {\n    isMenuOpen: isMenuOpen,\n    isMobileView: isMobileView,\n    toggleMenu: setIsMenuOpen,\n    rockets: data.rockets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SideMenu, {\n    isMenuOpen: isMenuOpen,\n    isMobileView: isMobileView,\n    toggleMenu: setIsMenuOpen,\n    rockets: data.rockets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })));\n};\nexport default NavBar;","map":{"version":3,"names":["React","useRef","gql","useQuery","Error","Loader","TopMenu","SideMenu","useNavigation","GET_ROCKETS_NAMES","NavBar","navRef","isMobileView","isMenuOpen","setIsMenuOpen","data","loading","error","rockets"],"sources":["/Users/patricia/Downloads/the-ultimate-api-challenge-spacex-master/starter-files/src/components/NavBar/NavBar.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { gql, useQuery } from '@apollo/client';\n// components\nimport Error from './../Error';\nimport Loader from './../Loader';\nimport TopMenu from './../TopMenu';\nimport SideMenu from './../SideMenu';\n// hooks\nimport useNavigation from './../../hooks/useNavigation';\n// style\nimport './style.scss';\n\nconst GET_ROCKETS_NAMES = gql`\n    {\n        rockets(offset: 1) {\n            id\n            name\n        }\n    }\n`;\n\nconst NavBar = () => {\n    const navRef = useRef(null);\n    const { isMobileView, isMenuOpen, setIsMenuOpen } = useNavigation(navRef);\n\n    const { data, loading, error } = useQuery(GET_ROCKETS_NAMES);\n\n    if (loading) return <Loader />;\n    if (error) return <Error error={error} />;\n\n    return (\n        <div className=\"container-fluid\" ref={navRef}>\n            <div className=\"row\">\n                <TopMenu\n                    isMenuOpen={isMenuOpen}\n                    isMobileView={isMobileView}\n                    toggleMenu={setIsMenuOpen}\n                    rockets={data.rockets}\n                />\n                <SideMenu\n                    isMenuOpen={isMenuOpen}\n                    isMobileView={isMobileView}\n                    toggleMenu={setIsMenuOpen}\n                    rockets={data.rockets}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NavBar;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C;AACA,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,QAAQ,MAAM,eAAe;AACpC;AACA,OAAOC,aAAa,MAAM,6BAA6B;AACvD;AACA,OAAO,cAAc;AAErB,MAAMC,iBAAiB,GAAGP,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMQ,MAAM,GAAG,MAAM;EACjB,MAAMC,MAAM,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM;IAAEW,YAAY;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAGN,aAAa,CAACG,MAAM,CAAC;EAEzE,MAAM;IAAEI,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGd,QAAQ,CAACM,iBAAiB,CAAC;EAE5D,IAAIO,OAAO,EAAE,oBAAO,oBAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG;EAC9B,IAAIC,KAAK,EAAE,oBAAO,oBAAC,KAAK;IAAC,KAAK,EAAEA,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG;EAEzC,oBACI;IAAK,SAAS,EAAC,iBAAiB;IAAC,GAAG,EAAEN,MAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzC;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAChB,oBAAC,OAAO;IACJ,UAAU,EAAEE,UAAW;IACvB,YAAY,EAAED,YAAa;IAC3B,UAAU,EAAEE,aAAc;IAC1B,OAAO,EAAEC,IAAI,CAACG,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACxB,eACF,oBAAC,QAAQ;IACL,UAAU,EAAEL,UAAW;IACvB,YAAY,EAAED,YAAa;IAC3B,UAAU,EAAEE,aAAc;IAC1B,OAAO,EAAEC,IAAI,CAACG,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACxB,CACA,CACJ;AAEd,CAAC;AAED,eAAeR,MAAM"},"metadata":{},"sourceType":"module"}